name: Docker Build and Deploy

on:
  push:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Frontend
        uses: docker/build-push-action@v4
        with:
          context: ./gun_n_powder_frontend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/gun_n_powder_frontend:latest

      - name: Build and push Backend
        uses: docker/build-push-action@v4
        with:
          context: ./gun_n_powder_backend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/gun_n_powder_backend:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Pull latest images
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/gun_n_powder_frontend:latest
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/gun_n_powder_backend:latest

            # Stop and remove existing containers
            docker stop frontend gun_n_powder_backend || true
            docker rm frontend gun_n_powder_backend || true

            # Start new containers
            docker run -d \
              --name gun_n_powder_frontend \
              -p 80:80 \
              --restart unless-stopped \
              ${{ secrets.DOCKERHUB_USERNAME }}/gun_n_powder_frontend:latest
              
            docker run -d \
              --name gun_n_powder_backend \
              -p 8000:8000 \
              --restart unless-stopped \
              -e DATABASE_NAME="{{ secrets.DATABASE_NAME }}" \
              -e DATABASE_HOST="{{ secrets.EC2_HOST }}" \
              -e DATABASE_USER="{{ secrets.DATABASE_USER }}" \
              -e DATABASE_PASSWORD="{{ secrets.DATABASE_PASSWORD }}" \
              ${{ secrets.DOCKERHUB_USERNAME }}/gun_n_powder_backend:latest

            # Clean up old images
            docker system prune -f
